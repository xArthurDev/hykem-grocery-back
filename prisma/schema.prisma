generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model tokens {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  expiresAt DateTime @db.Date
  token     String
  email     String

  @@unique([token])
}

model users {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  email      String
  name       String
  password   String
  username   String
  createdAt  DateTime     @default(now()) @db.Date
  updatedAt  DateTime     @updatedAt @db.Date
}

model categories {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String
  isDefault Boolean
  createdAt DateTime  @default(now()) @db.Date
  updatedAt DateTime  @updatedAt @db.Date
  products  products?
}

model products {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  minPrice    Int
  maxPrice    Int
  weight      String
  imageUrl    String
  createdAt   DateTime   @default(now()) @db.Date
  updatedAt   DateTime   @updatedAt @db.Date
  category    categories @relation(fields: [categoryId], references: [id], onUpdate: Cascade)
  categoryId  String     @unique @db.ObjectId
  shoplists   shoplists? @relation(fields: [shoplistsId], references: [id])
  shoplistsId String?    @db.ObjectId
}

model shoplists {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime   @default(now()) @db.Date
  updatedAt   DateTime   @updatedAt @db.Date
  user        users      @relation(fields: [userId], references: [id], onUpdate: Cascade)
  userId      String     @db.ObjectId
  products    products[]
}
